{"version":3,"sources":["theme.js","pages/MainPage.js","App.js","components/CreateAccount.js","components/Notification.js","services/tasks.js","services/comments.js","services/login.js","components/Login.js","hooks/useAuth.js","pages/LandingPage.js","components/Task.js","components/TaskList.js","services/category.js","components/AddButton.js","pages/HomePage.js","index.js"],"names":["theme","createTheme","palette","primary","main","spacing","MainPage","navigate","useNavigate","useEffect","window","localStorage","getItem","ThemeProvider","CssBaseline","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","mr","Typography","variant","component","Button","Link","to","App","CreateAccount","Notification","message","Snackbar","open","autoHideDuration","Alert","severity","width","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","console","log","update","id","put","deleteTask","delete","setToken","newToken","login","credentials","createContext","LoginForm","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","setUser","useLocation","state","handleLogin","event","preventDefault","loginService","user","setItem","JSON","stringify","taskService","commentService","setTimeout","Container","maxWidth","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","label","value","onChange","target","autoComplete","autoFocus","name","type","FormControlLabel","control","Checkbox","mb","Grid","container","item","xs","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","elevation","LandingPage","handleLogOut","onClick","useStyles","makeStyles","card","marginBottom","Task","task","toggleFinished","classes","openAlert","setOpenAlert","handleCloseAlert","reason","Card","className","CardMedia","image","alt","raised","CardContent","gutterBottom","title","content","CardActions","confirm","anchorOrigin","vertical","horizontal","onClose","tasksFrame","tasksContainer","TaskList","tasks","map","i","key","newElement","request","fab","bottom","left","borderRadius","height","backgroundColor","top","right","breakpoints","down","AddButton","setTasks","setOpen","newTask","setNewTask","newCategory","setNewCategory","newTitle","setNewTitle","currentCategories","setCurrentCategories","Tooltip","Fab","Add","Modal","modal","form","oneCategory","replace","length","taskObject","Math","random","status","category","date","Date","existingCategories","find","result","undefined","categoryService","returnedCategory","concat","returnedTask","alert","even","style","multiline","rows","defaultValue","placeholder","select","MenuItem","marginRight","HomePage","initialTasks","categories","loggedUserJSON","decoded","jwtDecode","currentDate","exp","getTime","removeItem","location","reload","e","parse","padding","sm","n","changedTask","filter","handleTaskChange","handleCategoryChange","ReactDOM","render","path","element","Login","document","getElementById"],"mappings":"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","file":"static/js/main.0396a301.chunk.js","sourcesContent":["import { createTheme } from '@mui/material'\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#3f51b5',\n    },\n  },\n  spacing: 4,\n})\n","import React, { useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nimport {\n  Button,\n  createTheme,\n  ThemeProvider,\n  Container, //eslint-disable-line no-unused-vars\n  CssBaseline,\n  Toolbar,\n  IconButton,\n  AppBar,\n  Typography,\n  Box,\n} from '@mui/material'\nimport MenuIcon from '@mui/icons-material/Menu'\n\nconst theme = createTheme()\n\nconst MainPage = () => {\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (window.localStorage.getItem('loggedTaskappUser')) {\n      navigate('/homepage')\n    }\n  }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              KBlog\n            </Typography>\n            <Button variant=\"contained\" component={Link} to={'/loginpage'}>\n              LOG IN\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default MainPage\n","import React from 'react'\nimport { theme } from './theme.js'\nimport MainPage from './pages/MainPage.js'\n\nimport { ThemeProvider } from '@mui/styles'\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <MainPage />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\n\nconst CreateAccount = () => {\n  return <div>hi</div>\n}\n\nexport default CreateAccount\n","import React from 'react'\nimport { Snackbar, Alert } from '@mui/material'\n\nconst Notification = ({ message }) => {\n  return message === null ? null : (\n    <Snackbar open={message} autoHideDuration={3000}>\n      <Alert severity=\"error\" sx={{ width: '100%' }}>\n        {message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = 'api/tasks'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  console.log(response)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst deleteTask = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, deleteTask, setToken }\n","import axios from 'axios'\nconst baseUrl = 'api/comments'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  console.log(response)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst deleteComment= (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, deleteComment, setToken }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import React, { useState, useEffect } from 'react'\nimport CreateAccount from './CreateAccount'\nimport Notification from './Notification'\nimport taskService from '../services/tasks'\nimport commentService from '../services/comments'\nimport loginService from '../services/login'\nimport { Link } from 'react-router-dom'\nimport Avatar from '@mui/material/Avatar'\nimport Button from '@mui/material/Button'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport TextField from '@mui/material/TextField'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\nimport Typography from '@mui/material/Typography'\nimport Container from '@mui/material/Container'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { useAuth } from '../hooks/useAuth'\n\nconst theme = createTheme()\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [user, setUser] = useState(null)\n\n  const navigate = useNavigate()\n  const { state } = useLocation()\n\n  useEffect(() => {\n    if (window.localStorage.getItem('loggedTaskappUser')) {\n      navigate('/homepage')\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      })\n\n      window.localStorage.setItem('loggedTaskappUser', JSON.stringify(user))\n      taskService.setToken(user.token)\n      commentService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      navigate('/homepage')\n    } catch (exception) {\n      if (!username) {\n        setErrorMessage('Please enter a username')\n      } else if (!password) {\n        setErrorMessage('Please enter a password')\n      } else {\n        setErrorMessage('Invalid credentials')\n      }\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n\n    console.log('logging in with', username, password)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Notification message={errorMessage} />\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleLogin}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              value={username}\n              onChange={({ target }) => setUsername(target.value)}\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Button\n              component={Link}\n              to={'/'}\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 0, mb: 2 }}\n            >\n              Cancel\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                {/* <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link> */}\n              </Grid>\n              <Grid item>\n                <Link to=\"/createaccount\">\n                  {'Don\\'t have an account? Sign Up'}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nexport default LoginForm\n\n// import React from 'react'\n\n// const LoginForm = ({\n//   handleSubmit,\n//   handleUsernameChange,\n//   handlePasswordChange,\n//   username,\n//   password,\n// }) => {\n//   return (\n//     <div>\n//       <h2> Login </h2>\n\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           username\n//           <input\n//             value={username}\n//             onChange={handleUsernameChange}\n//           />\n//         </div>\n//         <div>\n//           password\n//           <input\n//             type=\"password\"\n//             value={password}\n//             onChange={handlePasswordChange}\n//           />\n//         </div>\n//         <button type=\"submit\">login</button>\n//       </form>\n//     </div>\n//   )\n// }\n\n// export default LoginForm\n","// /src/hooks/useAuth.tsx\nimport React, { useState, createContext, useContext, useEffect } from 'react'\n\n// Create the context\nconst AuthContext = createContext(null)\n\nexport const AuthProvider = ({ children }) => {\n  // Using the useState hook to keep track of the value authed (if a\n  // user is logged in)\n  const [authed, setAuthed] = useState(false)\n\n  const result = window.localStorage.getItem('loggedTaskappUser')\n\n  if (result) {\n    console.log('user has logged in')\n\n    setAuthed(true)\n  }\n\n  /// Mock Async Login API call.\n  // TODO: Replace with your actual login API Call code\n  const fakeAsyncLogin = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve('Logged In')\n      }, 300)\n    })\n  }\n\n  // Mock Async Logout API call.\n  // TODO: Replace with your actual logout API Call code\n  const fakeAsyncLogout = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve('The user has successfully logged on the server')\n      }, 300)\n    })\n  }\n\n  return (\n    // Using the provider so that ANY component in our application can\n    // use the values that we are sending.\n    <AuthContext.Provider value={{ authed, setAuthed, }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\n// Finally creating the custom hook\nexport const useAuth = () => useContext(AuthContext)\n\n// import React, { useState } from 'react'\n// import jwtDecode from 'jwt-decode'\n// import { Navigate, useLocation } from 'react-router-dom'\n\n// const useAuth = async () => {\n//   const [authed, setAuthed] = useState(false)\n//   const loggedUserJSON = await window.localStorage.getItem('loggedTaskappUser')\n\n//   if (loggedUserJSON) {\n\n//     const decoded = jwtDecode(loggedUserJSON)\n//     const currentDate = new Date()\n\n//     if (decoded.exp * 1000 > currentDate.getTime()) {\n//       setAuthed(true)\n//     }\n//   }\n\n//   return authed\n// }\n\n// export default useAuth\n","import React from 'react'\n\nimport {\n  Button,\n  createTheme,\n  ThemeProvider,\n  CssBaseline,\n  Toolbar,\n  IconButton,\n  AppBar,\n  Typography,\n  Box,\n  useScrollTrigger,\n} from '@mui/material'\nimport MenuIcon from '@mui/icons-material/Menu'\n\nconst theme = createTheme()\n\nfunction ElevationScroll(props) {\n  const { children } = props\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  })\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  })\n}\n\nconst LandingPage = ({ username, handleLogOut }) => {\n  return (\n    username && (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box sx={{ flexGrow: 1 }} position=\"sticky\">\n          <ElevationScroll>\n            <AppBar>\n              <Toolbar>\n                <IconButton\n                  size=\"large\"\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                  sx={{ mr: 2 }}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                  Welcome {username}\n                </Typography>\n                <Button variant=\"contained\" onClick={handleLogOut}>\n                  Log Out\n                </Button>\n              </Toolbar>\n            </AppBar>\n          </ElevationScroll>\n          <Toolbar />\n        </Box>\n      </ThemeProvider>\n    )\n  )\n}\n\nexport default LandingPage\n","import React, { useState } from 'react'\nimport taskService from '../services/tasks'\nimport Card from '@mui/material/Card'\nimport CardActions from '@mui/material/CardActions'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport Button from '@mui/material/Button'\nimport Typography from '@mui/material/Typography'\nimport { makeStyles } from '@mui/styles'\nimport { Alert, Snackbar } from '@mui/material'\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    marginBottom: theme.spacing(5),\n  },\n}))\n\nconst Task = ({ task, toggleFinished, deleteTask }) => {\n  const classes = useStyles()\n  const [openAlert, setOpenAlert] = useState(false)\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpenAlert(false)\n  }\n\n  const handleDelete = () => {\n    if (window.confirm('Are you sure you want to delete this?')) {\n      setOpenAlert(true)\n      taskService.deleteTask(task.id)\n      deleteTask(task.id)\n    }\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        component=\"img\"\n        image=\"https://images.squarespace-cdn.com/content/v1/5f68da90297b94613c756dd6/e0d06859-30f6-4679-997c-a2d688de5629/LXI03898.jpg?format=1500w\"\n        alt=\"green iguana\"\n        raised=\"true\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {task.title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {task.content}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Share</Button>\n        <Button size=\"small\" onClick={handleDelete}>\n          Delete\n        </Button>\n        <Snackbar\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n          open={openAlert}\n          autoHideDuration={3000}\n          onClose={handleCloseAlert}\n        >\n          <Alert onClose={handleCloseAlert} severity=\"success\">\n            Deleted post!\n          </Alert>\n        </Snackbar>\n      </CardActions>\n    </Card>\n\n  // <div className='tasks'>\n  //   {/*<button onClick={toggleFinished}>{label}</button>*/}\n\n  //   <input type='checkbox' checked={checked} id='myCheck' onChange={toggleFinished}></input>\n  //   {task.content}\n  //   <button onClick={deleteTask} id='deleteButton'>\n  // \t\tx\n  //   </button>\n  // </div>\n  )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from './Task'\nimport Dropdown from './Dropdown'\n\nimport {\n  Button,\n  createTheme,\n  ThemeProvider,\n  Container,\n  CssBaseline,\n  Toolbar,\n  IconButton,\n  AppBar,\n  Typography,\n  Box,\n  Stack,\n  Item,\n} from '@mui/material'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { makeStyles } from '@mui/styles'\n\nconst theme = createTheme()\n\nconst useStyles = makeStyles({\n  tasksFrame: {\n    m: 1,\n  },\n  tasksContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n})\n\nconst TaskList = ({\n  display,\n  tasks,\n  toggleFinished,\n  deleteTask,\n}) => {\n  const classes = useStyles()\n  return (\n    display && (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Box className={classes.tasksFrame}>\n          <Container className={classes.tasksContainer} spacing={2}>\n            {tasks.map((task, i) => (\n              <Task\n                key={i}\n                task={task}\n                toggleFinished={() => toggleFinished(task.id)}\n                deleteTask={() => deleteTask(task.id)}\n              />\n            ))}\n          </Container>\n        </Box>\n        <Box\n          sx={{\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            m: 1,\n          }}\n        >\n\n        </Box>\n      </ThemeProvider>\n    )\n  )\n}\n\nexport default TaskList\n","import axios from 'axios'\nconst baseUrl = 'api/categories'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then((response) => response.data)\n}\n\nconst create = (newElement) => {\n    const request = axios.post(baseUrl, newElement)\n    console.log(request.then((response) => response.data))\n\treturn request.then((response) => response.data)\n}\n\nexport default { getAll, create }\n","import React, { useState } from 'react'\nimport { makeStyles } from '@mui/styles'\nimport {\n  Fab,\n  Tooltip,\n  Modal,\n  Container,\n  TextField,\n  collapseClasses,\n  Button,\n  MenuItem,\n  AppBar,\n  Typography,\n  Alert,\n  Snackbar,\n} from '@mui/material'\nimport { Add as AddIcon } from '@mui/icons-material'\nimport taskService from '../services/tasks'\nimport categoryService from '../services/category'\nimport commentService from '../services/comments'\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: 'fixed',\n    bottom: 20,\n    left: 20,\n  },\n  container: {\n    borderRadius: 5,\n    width: 500,\n    height: 400,\n    backgroundColor: 'white',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '100vw',\n      height: '100vh',\n    },\n  },\n  // form: {\n  //   padding: theme.spacing(2),\n  // },\n  item: {\n    marginBottom: theme.spacing(3),\n  },\n}))\n\nconst AddButton = ({ tasks, setTasks }) => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n  const [openAlert, setOpenAlert] = useState(false)\n  const [newTask, setNewTask] = useState('')\n  const [newCategory, setNewCategory] = useState('Public')\n  const [newTitle, setNewTitle] = useState('')\n  const [currentCategories, setCurrentCategories] = useState([])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpenAlert(false)\n  }\n\n  const addTask = (event) => {\n    event.preventDefault()\n\n    // const commentObject = {\n    //   content: newTask,\n    //   id: Math.random(10000000),\n    //   date: Date(),\n    // }\n\n    // if (!newTask.replace(/\\s/g, '').length) {\n    //   alert('Please enter valid text.')\n    //   setNewTask('')\n    // } else if (!newTitle.replace(/\\s/g, '').length) {\n    //   alert('Please enter a valid title')\n    //   setNewTitle('')\n    // } else {\n    //   commentService.create(commentObject).then((returnedTask) => {\n    //     console.log(returnedTask)\n    //     setTasks(tasks.concat(returnedTask))\n    //     setNewTask('')\n    //     setNewCategory('Public')\n    //     setNewTitle('')\n    //     setOpen(false)\n    //     setOpenAlert(true)\n    //   })\n    // }\n    const oneCategory =\n      !newCategory.replace(/\\s/g, '').length === true\n        ? 'uncategorized'\n        : newCategory\n\n    const taskObject = {\n      title: newTitle,\n      content: newTask,\n      id: Math.random(10000000),\n      status: false,\n      category: oneCategory,\n      date: Date(),\n    }\n\n    const existingCategories = currentCategories.find(\n      (result) => result.category === newCategory\n    )\n    console.log(existingCategories)\n\n    if (existingCategories === undefined && oneCategory !== 'uncategorized') {\n      categoryService\n        .create({ category: oneCategory })\n        .then((returnedCategory) => {\n          console.log(returnedCategory)\n          setCurrentCategories(currentCategories.concat(returnedCategory))\n        })\n    }\n\n    if (!newTask.replace(/\\s/g, '').length) {\n      alert('Please enter valid text.')\n      setNewTask('')\n    } else if (!newTitle.replace(/\\s/g, '').length) {\n      alert('Please enter a valid title')\n      setNewTitle('')\n    } else {\n      taskService.create(taskObject).then((returnedTask) => {\n        console.log(returnedTask)\n        setTasks(tasks.concat(returnedTask))\n        setNewTask('')\n        setNewCategory('Public')\n        setNewTitle('')\n        setOpen(false)\n        setOpenAlert(true)\n      })\n    }\n  }\n\n  const handleTaskChange = (event) => {\n    console.log(event.target.value)\n    setNewTask(event.target.value)\n  }\n\n  const handleCategoryChange = (event) => {\n    setNewCategory(event.target.value)\n  }\n\n  const handleTitleChange = (even) => {\n    setNewTitle(even.target.value)\n  }\n\n  return (\n    <div>\n      <Tooltip title=\"Add\" aria-label=\"add\" onClick={() => setOpen(true)}>\n        <Fab color=\"primary\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n        className={classes.modal}\n      >\n        <Container className={classes.container}>\n          <h2>Create a Post</h2>\n          <form className={classes.form} autoComplete=\"off\" onSubmit={addTask}>\n            <div className={classes.item}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Title\"\n                value={newTitle}\n                onChange={handleTitleChange}\n                size=\"small\"\n                style={{ width: '100%' }}\n              />\n            </div>\n            <div className={classes.item}>\n              <TextField\n                id=\"outlined-multiline-static\"\n                multiline\n                rows={4}\n                defaultValue=\"Enter text here...\"\n                onChange={handleTaskChange}\n                value={newTask}\n                label=\"Description\"\n                placeholder=\"Enter text here...\"\n                size=\"small\"\n                style={{ width: '100%' }}\n                variant=\"outlined\"\n              />\n            </div>\n            <div className={classes.item}>\n              <TextField\n                select\n                label=\"Visibility\"\n                value={newCategory}\n                onChange={handleCategoryChange}\n              >\n                <MenuItem value=\"Public\"> Public</MenuItem>\n                <MenuItem value=\"Private\"> Private</MenuItem>\n                <MenuItem value=\"Unlisted\"> Unlisted</MenuItem>\n              </TextField>\n            </div>\n            <div className={classes.item}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                type=\"submit\"\n                style={{ marginRight: 20 }}\n              >\n                Post\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={handleClose}\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </Container>\n      </Modal>\n      <Snackbar\n        anchorOrigin={{ vertical: ' bottom', horizontal: 'center' }}\n        open={openAlert}\n        autoHideDuration={3000}\n        onClose={handleCloseAlert}\n      >\n        <Alert onClose={handleCloseAlert} severity=\"success\">\n          Created new post!\n        </Alert>\n      </Snackbar>\n    </div>\n  )\n}\n\nexport default AddButton\n{\n  /* <form onSubmit={addTask}>\n  <input value={newTask} onChange={handleTaskChange} placeholder=\" Task\" />\n  <input\n    type=\"text\"\n    value={newCategory}\n    onChange={handleCategoryChange}\n    placeholder=\" Category\"\n    list=\"cats\"\n  />\n  <datalist id=\"cats\">\n    {currentCategories.map((category, i) => (\n      <Dropdown key={i} category={category.category} />\n    ))}\n  </datalist>\n\n  <input type=\"submit\" value=\"Add\" />\n</form>  */\n}\n","import React, { useState, useEffect } from 'react'\nimport jwtDecode from 'jwt-decode'\nimport LandingPage from './LandingPage'\nimport TaskList from '../components/TaskList'\nimport AddButton from '../components/AddButton'\nimport Notification from '../components/Notification'\nimport taskService from '../services/tasks'\nimport commentService from '../services/comments'\nimport categoryService from '../services/category'\nimport { ThemeProvider, createTheme, Toolbar, Grid } from '@mui/material'\nimport { useNavigate } from 'react-router-dom'\n\nconst theme = createTheme()\n\nconst HomePage = () => {\n  const [tasks, setTasks] = useState([])\n  const [newTask, setNewTask] = useState('')\n  const [newCategory, setNewCategory] = useState('')\n  const [currentCategories, setCurrentCategories] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [user, setUser] = useState(null)\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    console.log('effect')\n    taskService.getAll().then((initialTasks) => {\n      setTasks(initialTasks)\n    })\n  }, [])\n\n  useEffect(() => {\n    console.log('categories')\n    categoryService.getAll().then((categories) => {\n      setCurrentCategories(categories)\n      console.log(categories)\n    })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedTaskappUser')\n    console.log(loggedUserJSON)\n    if (loggedUserJSON) {\n      const decoded = jwtDecode(loggedUserJSON)\n      const currentDate = new Date()\n\n      if (decoded.exp * 1000 < currentDate.getTime()) {\n        try {\n          window.localStorage.removeItem('loggedTaskappUser')\n          window.location.reload()\n        } catch (e) {\n          setErrorMessage('Already logged out')\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        }\n      } else {\n        const user = JSON.parse(loggedUserJSON)\n        setUser(user)\n        taskService.setToken(user.token)\n        commentService.setToken(user.token)\n      }\n    }\n  }, [])\n\n  const handleLogOut = (event) => {\n    event.preventDefault()\n    try {\n      window.localStorage.removeItem('loggedTaskappUser')\n    } catch (e) {\n      setErrorMessage('Already logged out')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n    navigate('/loginpage')\n  }\n\n  const handleTaskChange = (event) => {\n    console.log(event.target.value)\n    setNewTask(event.target.value)\n  }\n\n  const handleCategoryChange = (event) => {\n    setNewCategory(event.target.value)\n  }\n\n  const toggleFinished = (id) => {\n    const task = tasks.find((n) => n.id === id)\n\n    const changedTask = { ...task, status: !task.status }\n\n    taskService.update(id, changedTask).then((returnedTask) => {\n      setTasks(tasks.map((task) => (task.id !== id ? task : returnedTask)))\n    })\n  }\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  if (!user) {\n    navigate('/loginpage')\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Notification message={errorMessage} />\n      <LandingPage\n        username={user ? user.username : ''}\n        handleLogOut={handleLogOut}\n      />\n      <Grid container sx={{ padding: '16px' }}>\n        <Grid item sm={2} xs={2}></Grid>\n        <Grid item sm={7} xs={10}>\n          <TaskList\n            display={!!user}\n            tasks={tasks}\n            toggleFinished={toggleFinished}\n            deleteTask={deleteTask}\n            newTask={newTask}\n            handleTaskChange={handleTaskChange}\n            newCategory={newCategory}\n            handleCategoryChange={handleCategoryChange}\n            currentCategories={currentCategories}\n          />\n        </Grid>\n        <Grid item sm={3}></Grid>\n      </Grid>\n      {user && <AddButton tasks={tasks} setTasks={setTasks} />}\n    </ThemeProvider>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  useLocation,\n  Navigate,\n} from 'react-router-dom'\nimport App from './App'\nimport LoginForm from './components/Login'\nimport CreateAccount from './components/CreateAccount'\nimport HomePage from './pages/HomePage'\nimport { useAuth } from './hooks/useAuth'\n\nfunction RequireAuth({ children }) {\n  const { authed } = useAuth()\n  const location = useLocation()\n  console.log(authed)\n  if (!authed) {\n    return (\n      <Navigate to=\"/loginpage\" replace state={{ path: location.pathname }} />\n    )\n  }\n  return children\n}\n\nReactDOM.render(\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />} />\n      <Route path=\"/createaccount\" element={<CreateAccount />} />\n      <Route path=\"/loginpage\" element={<LoginForm />} />\n      <Route path=\"/homepage\" element={<HomePage />} />\n    </Routes>\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}