{"version":3,"sources":["components/Task.js","components/Dropdown.js","services/tasks.js","services/category.js","services/login.js","App.js","index.js"],"names":["Task","task","toggleFinished","deleteTask","checked","status","className","type","id","onChange","content","Dropdown","category","value","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","delete","setToken","newToken","newElement","request","console","log","login","credentials","App","useState","tasks","setTasks","newTask","setNewTask","newCategory","setNewCategory","currentCategories","setCurrentCategories","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","taskService","initialTasks","categoryService","categories","loggedUserJSON","window","localStorage","getItem","JSON","parse","addTask","event","preventDefault","oneCategory","replace","length","taskObject","Math","random","date","Date","existingCategories","find","result","undefined","returnedCategory","concat","returnedTask","alert","handleLogin","loginService","setItem","stringify","setTimeout","handleLogOut","removeItem","location","reload","handleTaskChange","target","handleCategoryChange","displayDate","toDateString","tasksDone","forEach","item","onSubmit","name","map","i","key","n","changedTask","confirm","filter","placeholder","list","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c311a301.chunk.js","sourcesContent":["import React from 'react'\n\nconst Task = ({ task, toggleFinished, deleteTask }) => {\n\t/*     const label = task.status\n    ? 'finished' : 'not finished'\n */\n\n\tconst checked = task.status ? true : ''\n\n\treturn (\n\t\t<div className='tasks'>\n\t\t\t{/*<button onClick={toggleFinished}>{label}</button>*/}\n\n\t\t\t<input type='checkbox' checked={checked} id='myCheck' onChange={toggleFinished}></input>\n\t\t\t{task.content}\n\t\t\t<button onChange={deleteTask} id='deleteButton'>\n\t\t\t\tx\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default Task\n","import React from 'react';\n\nconst Dropdown = ({ category }) => {\n    return (\n        <option value={category} />\n    );\n};\n\nexport default Dropdown;","import axios from 'axios'\nconst baseUrl = 'api/tasks'\n\nlet token = null\n\nconst setToken = newToken => {\n\ttoken = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n\tconst config = {\n\t\theaders: { Authorization: token }\n\t}\n\tconst response = await axios.post(baseUrl, newObject, config)\n\treturn response.data\n}\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\n\treturn request.then((response) => response.data)\n}\n\nconst deleteTask = (id) => {\n\treturn axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, deleteTask, setToken }\n","import axios from 'axios'\nconst baseUrl = 'api/categories'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then((response) => response.data)\n}\n\nconst create = (newElement) => {\n    const request = axios.post(baseUrl, newElement)\n    console.log(request.then((response) => response.data))\n\treturn request.then((response) => response.data)\n}\n\nexport default { getAll, create }\n","import axios from \"axios\"\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default {login}\n","import React, { useState, useEffect } from 'react'\nimport Task from './components/Task'/* \nimport ProgressBar from './components/ProgressBar' */\nimport Dropdown from './components/Dropdown'\nimport taskService from './services/tasks'\nimport categoryService from './services/category'\nimport loginService from './services/login'\n\nconst App = () => {\n\tconst [tasks, setTasks] = useState([]) /*[varName, funcName] <- list of tasks*/\n\tconst [newTask, setNewTask] = useState('')\n\tconst [newCategory, setNewCategory] = useState('')\n\tconst [currentCategories, setCurrentCategories] = useState([])\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\n\tconst [username, setUsername] = useState('')\n\n\tconst [password, setPassword] = useState('')\n\tconst [user, setUser] = useState(null)\n\n\tuseEffect(() => {\n\t\tconsole.log('effect')\n\t\ttaskService.getAll().then((initialTasks) => {\n\t\t\tsetTasks(initialTasks)\n\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconsole.log('categories')\n\t\tcategoryService.getAll().then((categories) => {\n\t\t\tsetCurrentCategories(categories)\n\t\t\tconsole.log(categories)\n\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedTaskappUser')\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON)\n\t\t\tsetUser(user)\n\t\t\ttaskService.setToken(user.token)\n\t\t}\n\t}, [])\n\n\tconst addTask = (event) => {\n\n\t\tevent.preventDefault()\n\t\tconst oneCategory = !newCategory.replace(/\\s/g, '').length === true ? 'uncategorized' : newCategory\n\n\t\tconst taskObject = {\n\t\t\tcontent: newTask,\n\t\t\tid: Math.random(10000000),\n\t\t\tstatus: false,\n\t\t\tcategory: oneCategory,\n\t\t\tdate: Date(),\n\t\t}\n\n\t\tconst existingCategories = currentCategories.find((result) => result.category === newCategory)\n\t\tconsole.log(existingCategories)\n\n\t\tif (existingCategories === undefined && oneCategory !== 'uncategorized') {\n\t\t\tcategoryService.create({ category: oneCategory }).then((returnedCategory) => {\n\t\t\t\tconsole.log(returnedCategory)\n\t\t\t\tsetCurrentCategories(currentCategories.concat(returnedCategory))\n\t\t\t})\n\t\t}\n\n\t\tif (!newTask.replace(/\\s/g, '').length) {\n\t\t\talert('Please enter valid text.')\n\t\t\tsetNewTask('')\n\t\t} else {\n\t\t\ttaskService.create(taskObject).then((returnedTask) => {\n\t\t\t\tsetTasks(tasks.concat(returnedTask))\n\t\t\t\tsetNewTask('')\n\t\t\t\tsetNewCategory('')\n\n\t\t\t})\n\t\t}\n\t}\n\n\tconst handleLogin = async (event) => {\n\t\tevent.preventDefault()\n\n\t\ttry {\n\t\t\tconst user = await loginService.login({\n\t\t\t\tusername, password\n\t\t\t})\n\n\t\t\twindow.localStorage.setItem(\n\t\t\t\t'loggedTaskappUser', JSON.stringify(user)\n\t\t\t)\n\t\t\ttaskService.setToken(user.token)\n\t\t\tsetUser(user)\n\t\t\tsetUsername('')\n\t\t\tsetPassword('')\n\t\t} catch (exception) {\n\t\t\tsetErrorMessage('Wrong credentials')\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetErrorMessage(null)\n\t\t\t}, 5000)\n\t\t}\n\n\t\tconsole.log('logging in with', username, password)\n\t}\n\n\tconst handleLogOut = (event) => {\n\t\tevent.preventDefault()\n\t\ttry {\n\t\t\twindow.localStorage.removeItem('loggedTaskappUser')\n\t\t\twindow.location.reload()\n\t\t} catch {\n\t\t\tsetErrorMessage('Already logged out')\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetErrorMessage(null)\n\t\t\t}, 5000)\n\t\t}\n\t}\n\n\tconst handleTaskChange = (event) => {\n\t\tconsole.log(event.target.value)\n\t\tsetNewTask(event.target.value)\n\t}\n\n\tconst handleCategoryChange = (event) => {\n\t\tsetNewCategory(event.target.value)\n\t}\n\n\tconst toggleFinished = (id) => {\n\t\tconst task = tasks.find((n) => n.id === id)\n\n\t\tconst changedTask = { ...task, status: !task.status }\n\n\t\ttaskService.update(id, changedTask).then((returnedTask) => {\n\t\t\tsetTasks(tasks.map((task) => (task.id !== id ? task : returnedTask)))\n\t\t})\n\t}\n\n\tconst deleteTask = (id) => {\n\t\tif (window.confirm('Are you sure you want to delete this?')) {\n\t\t\ttaskService.deleteTask(id)\n\t\t\tsetTasks(tasks.filter((task) => task.id !== id))\n\t\t}\n\t}\n\n\tvar date = new Date();\n\tvar displayDate = date.toDateString();\n\n    var tasksDone = 0;\n    tasks.forEach((item) => { /*map = do same thing to each item in list*/\n\n        if (item.status)\n        {\n            tasksDone += 1;\n        }\n\t\tconsole.log(tasksDone);\n    })\n\n\t\tconst loginForm = () => (\n\t\t\t<form onSubmit={handleLogin}>\n\t\t\t<div>\n\t\t\t\tusername\n\t\t\t\t\t<input \n\t\t\t\t\ttype=\"text\" \n\t\t\t\t\tvalue={username}\n\t\t\t\t\tname=\"Username\"\n\t\t\t\t\tonChange={({target}) => setUsername(target.value)}/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tpassword\n\t\t\t\t\t<input \n\t\t\t\t\ttype=\"password\" \n\t\t\t\t\tvalue={password}\n\t\t\t\t\tname=\"Password\"\n\t\t\t\t\tonChange={({target}) => setPassword(target.value)}/>\n\t\t\t</div>\n\t\t\t<button type=\"submit\">login</button>\n\t\t\t</form>\n\t\t)\n\n\t\tconst logOutButton = () => (\n\t\t\t<form onSubmit={handleLogOut}> \n\t\t\t\t<button type=\"submit\">logout</button>\n\t\t\t</form>\n\t\t)\n\n\t\tconst taskForm = () => (\n\t\t\t<>\n\t\t\t<div>\n\t\t\t\t{tasks.map((task, i) => (\n\t\t\t\t\t<Task\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\ttoggleFinished={() => toggleFinished(task.id)}\n\t\t\t\t\t\tdeleteTask={() => deleteTask(task.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<form onSubmit={addTask}>\n\t\t\t\t<input value={newTask} onChange={handleTaskChange} placeholder=' Task' />\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={newCategory}\n\t\t\t\t\tonChange={handleCategoryChange}\n\t\t\t\t\tplaceholder=' Category'\n\t\t\t\t\tlist='cats'\n\t\t\t\t/>\n\t\t\t\t<datalist id='cats'>\n\t\t\t\t\t{currentCategories.map((category, i) => (\n\t\t\t\t\t\t<Dropdown key={i} category={category.category} />\n\t\t\t\t\t))}\n\t\t\t\t</datalist>\n\n\t\t\t\t<input type=\"submit\" value=\"Add\" />\n\t\t\t\t{/* <button type='submit'>save</button> */}\n\t\t\t</form>\n\t\t\t</>\n\t\t)\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Task List for {displayDate}</h2>\t\t\n\t\t\t{user === null && loginForm()}\n\t\t\t{user !== null && taskForm()}\n\n\t\t\t{user !== null && logOutButton()}\n\t\t\t{/* <div className=\"right-side\">\n                \n                <p>Overall</p>\n                <div/>\n                \n                <ProgressBar numberOfTasks={tasks.length} tasksDone={tasksDone} />\n            </div> */}\n\n\t\t</div>\n\t\t\t\n\t)\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n/* import './index.css'; */\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}